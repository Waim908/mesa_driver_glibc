name: build mesa driver (no kgsl patch)

on:
  workflow_dispatch:
    inputs:
      inputMesaBranch:
        description: "输入Mesa驱动分支"
        required: true
        default: "mesa-25.1.0"
      inputEnableO3:
        description: "是否启用O3"
        required: true
        default: "true"


env:
  mesaVersion: ${{ github.event.inputs.inputMesaBranch }}
  enableO3: ${{ github.event.inputs.inputEnableO3 }}
  # vkVersion: 1.3.301
  LD_RPATH: /data/data/com.termux/files/usr/glibc
  LD_FILE: ld-linux-aarch64.so.1

jobs:
  ubuntu:
    runs-on: ubuntu-24.04-arm
    steps:
      - name: get resources and apply patch
        id: getRes
        run: |
          echo "CPU核心数量：$(nproc)"
          echo "mesa 目标版本：${mesaVersion:-latestDev}"
          echo "o3是否启用：${enableO3:-false}"
          # echo "vulkan api版本：$vkVersion"
          echo -e 'deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ noble main restricted universe multiverse\ndeb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ noble main restricted universe multiverse\ndeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ noble-updates main restricted universe multiverse\ndeb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ noble-updates main restricted universe multiverse\ndeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ noble-backports main restricted universe multiverse\ndeb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ noble-backports main restricted universe multiverse\ndeb http://ports.ubuntu.com/ubuntu-ports/ noble-security main restricted universe multiverse\ndeb-src http://ports.ubuntu.com/ubuntu-ports/ noble-security main restricted universe multiverse' | sudo tee /etc/apt/sources.list
          sudo apt update -y 
          sudo apt upgrade -y
          sudo apt install patchelf ninja-build cmake python3-pip libepoxy-dev -y 
          pip install mako --break-system-package
          pip install PyYAML --break-system-package
          pip install meson --break-system-package
          sudo apt build-dep mesa -y
          mkdir -p /data/data/com.termux/files/usr/glibc
          cd /tmp
          git clone https://github.com/Waim908/mesa_driver_glibc.git patch
          if [[ ! -z $mesaVersion ]]; then
            git clone -b $mesaVersion https://gitlab.freedesktop.org/mesa/mesa.git mesa
          else
            git clone https://gitlab.freedesktop.org/mesa/mesa.git
          fi
          # wget -O /tmp/glibc.tar.xz https://github.com/Waim908/lite-termux-glibc/releases/download/nodownload/Lite-glibc-2.41-1.tar.xz 
          # tar -xf /tmp/glibc.tar.xz -C /data/data/com.termux/files/usr/
          cd /tmp/mesa
          if [[ -z $mesaVersion ]]; then
            allHash=$(git rev-parse HEAD)
            export mesaVersion=${$allHash:0:8}
            echo "mesaVer=$mesaVersion" >> $GITHUB_OUTPUT
          else
            echo "mesaVer=$mesaVersion" >> $GITHUB_OUTPUT
          fi
          echo "应用fix-for-anon-file.patch"
          if ! patch -p1 < /tmp/patch/mesa/fix-for-anon-file.patch; then
            echo "失败"
            exit 1
          fi
          echo "应用0013-fix-bad-syscall.patch"
          if ! patch -p1 < /tmp/patch/v25/0013-fix-bad-syscall.patch; then
            echo "失败"
            exit 1
          fi
          echo "应用0014-freedreno-HACK-GL_ARB_timer_query.patch"
          if ! patch -p1 < /tmp/patch/v25/0014-freedreno-HACK-GL_ARB_timer_query.patch; then
            echo "失败"
            exit 1
          fi
      
      - name: meson configure - mesa driver
        run: |
          cd /tmp/mesa/
          if ! meson setup builddir --libdir=lib -Dprefix=/data/data/com.termux/files/usr/glibc -Dbuildtype=release -Dplatforms=x11 -Dgallium-drivers=freedreno,virgl,zink,panfrost,llvmpipe -Dvulkan-drivers=freedreno,panfrost,swrast,virtio -Degl=enabled -Dgles1=disabled -Dgles2=enabled -Dglvnd=enabled -Dglx=dri -Dllvm=enabled -Dgallium-extra-hud=true -Dgallium-va=enabled -Dgallium-vdpau=enabled -Dgbm=enabled -Dvulkan-layers=device-select,overlay -Dfreedreno-kmds=kgsl,msm -Dlibunwind=disabled -Dvalgrind=disabled -Dmicrosoft-clc=disabled -Dvideo-codecs=all; then
            echo "mesa driver构建彻底失败！"
            exit 1
          fi

      - name: meson compile & install - mesa driver
        run: |
          if [[ $enableO3 == true ]]; then
            export CFLAGS="-O3 -marh=armv8-a -mutune=generic -flto=auto"
            export CXXFLAGS="-O3 -marh=armv8-a -mutune=generic -flto=auto"
            export LDFLAGS="-O3 -flto=auto"
          fi
          cd /tmp/mesa
          if ! meson compile -C builddir; then
            echo "mesa driver编译彻底失败！"
            exit 1
          else
            meson install -C builddir
          fi

      - name: package
        run: |
          # . /tmp/patch/patchelf.sh
          # cd /tmp
          # cd /tmp/glibc && patchelf_glibc
          # cd /tmp/glibc/share/vulkan/icd.d/
          # find . -name "*.json" -exec sed -i \
          #   -e 's|/tmp/|/data/data/com.termux/files/usr/|g' \
          #   -e "s/\"api_version\": \"[^\"]*\"/\"api_version\": \"$vkVersion\"/g" \
          #   {} \;
          # cd /tmp
          cd /data/data/com.termux/files/usr/glibc/
          find "$target_dir" -type f -exec file {} + | grep -E ":.*ELF" | cut -d: -f1 | while read -r elf_file; do
              echo "Patching $elf_file..."
              patchelf --set-rpath "$LD_RPATH" --set-interpreter "$LD_FILE" "$elf_file" || {
                  echo "Failed to patch $elf_file" >&2
                  continue
              }
          done
          cd /data/data/com.termux/files/usr/
          tar -I 'xz -T$(nproc)' -cf /tmp/mesa-$mesaVersion.tar.xz glibc/
      
      - name: package and release
        uses: softprops/action-gh-release@v2
        with:
          name: mesa-driver-${{ steps.getRes.outputs.mesaVer }}
          draft: false
          prerelease: false
          tag_name: mesa-${{ steps.getRes.outputs.mesaVer }}
          body: panfrost turnip(no kgsl patch) llvmpipe virgl virtio
          files: |
            /tmp/mesa-${{ steps.getRes.outputs.mesaVer }}.tar.xz
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}